-- MySQL Script generated by MySQL Workbench
-- Sun Feb 19 17:01:36 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema poms
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema poms
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `poms` DEFAULT CHARACTER SET utf8 ;
USE `poms` ;

-- -----------------------------------------------------
-- Table `poms`.`Manufacturer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Manufacturer` (
  `name` VARCHAR(45) NOT NULL,
  `adress` VARCHAR(45) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Category` (
  `name` VARCHAR(45) NOT NULL,
  `info` VARCHAR(100) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Warehouse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Warehouse` (
  `i_warehouse` INT NOT NULL,
  `Info` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`i_warehouse`),
  UNIQUE INDEX `idWarehouse_UNIQUE` (`i_warehouse` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Part`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Part` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `count` INT UNSIGNED NOT NULL,
  `category_name` VARCHAR(45) NOT NULL,
  `manufacturer_name` VARCHAR(45) NOT NULL,
  `id_warehouse` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_Part_Manufacturer1_idx` (`manufacturer_name` ASC) VISIBLE,
  INDEX `fk_Part_Category1_idx` (`category_name` ASC) VISIBLE,
  INDEX `fk_Part_Warehouse1_idx` (`id_warehouse` ASC) VISIBLE,
  CONSTRAINT `fk_Part_Manufacturer1`
    FOREIGN KEY (`manufacturer_name`)
    REFERENCES `poms`.`Manufacturer` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Part_Category1`
    FOREIGN KEY (`category_name`)
    REFERENCES `poms`.`Category` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Part_Warehouse1`
    FOREIGN KEY (`id_warehouse`)
    REFERENCES `poms`.`Warehouse` (`i_warehouse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Buyer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Buyer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Sale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Sale` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `part_id` INT NOT NULL,
  `count` INT UNSIGNED NOT NULL,
  `buyer_id` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sale_Part_idx` (`part_id` ASC) VISIBLE,
  INDEX `fk_sale_buyer1_idx` (`buyer_id` ASC) VISIBLE,
  CONSTRAINT `fk_sale_Part`
    FOREIGN KEY (`part_id`)
    REFERENCES `poms`.`Part` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sale_buyer1`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `poms`.`Buyer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poms`.`Login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `poms`.`Login` (
  `id_login` INT NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_login`))
ENGINE = InnoDB;

USE `poms`;

DELIMITER $$
USE `poms`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poms`.`Sale_AFTER_INSERT` AFTER INSERT ON `Sale` FOR EACH ROW
BEGIN
update Part set count = count-NEW.count where part.id = NEW.part_id;
END$$

USE `poms`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poms`.`Sale_AFTER_INSERT_1` AFTER INSERT ON `Sale` FOR EACH ROW
BEGIN
update Part set count = count-NEW.count where part.id = NEW.part_id;
END$$

USE `poms`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poms`.`Sale_AFTER_INSERT_2` AFTER INSERT ON `Sale` FOR EACH ROW
BEGIN
if (new.count<0) then update  Sale set count = null where sale.id = NEW.part_id;
        end if;

END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
